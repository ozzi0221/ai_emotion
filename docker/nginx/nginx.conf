user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 로그 형식
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # 보안 헤더
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # 업스트림 정의
    upstream avatar_app {
        server avatar-app:5000;
        keepalive 32;
    }

    # 속도 제한
    limit_req_zone $binary_remote_addr zone=avatar_limit:10m rate=30r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # 기본 서버 설정
    server {
        listen 80;
        server_name localhost avatar.localhost;
        
        # HTTP to HTTPS 리다이렉트 (SSL 사용시)
        # return 301 https://$server_name$request_uri;

        # 속도 제한 적용
        limit_req zone=avatar_limit burst=10 nodelay;
        limit_conn addr 5;

        # 정적 파일 처리
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # 비디오 파일 스트리밍 지원
            location ~* \.(mp4|webm|ogg)$ {
                add_header Accept-Ranges bytes;
                add_header Content-Type video/mp4;
            }
        }

        # 아바타 애플리케이션 프록시
        location / {
            proxy_pass http://avatar_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 지원
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 타임아웃 설정
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 버퍼링 설정
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Server-Sent Events 스트리밍 최적화
        location /chat {
            proxy_pass http://avatar_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 스트리밍 설정
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 24h;
            proxy_send_timeout 24h;
            
            # 청크 인코딩 비활성화
            chunked_transfer_encoding off;
        }

        # 헬스체크 엔드포인트
        location /health {
            proxy_pass http://avatar_app;
            access_log off;
        }

        # 보안 - 숨겨진 파일 접근 차단
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 에러 페이지
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS 서버 설정 (SSL 인증서가 있는 경우)
    # server {
    #     listen 443 ssl http2;
    #     server_name avatar.localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    #     
    #     # 위의 HTTP 서버 설정과 동일한 location 블록들...
    # }
}
